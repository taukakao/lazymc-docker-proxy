name: Integration Test
on:
  push:
    branches:
      - master
      - main
      - try_cross
  pull_request:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-rust:
    name: Build Rust
    runs-on: ubuntu-latest
    env:
      LAZYMC_VERSION: 0.2.11
      RUST_ARCH: x86_64-unknown-linux-musl
    
    steps:
      - name: Install rustup
        run: |
          sudo apt-get update
          sudo apt-get install -y cargo
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sudo sh
          rustup target add $RUST_ARCH

      - name: Install dependencies
        run: |
          sudo update-ca-certificates
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev musl-tools musl-dev

      - name: Use cargo
        run: echo cargo > /tmp/lazymc-build-command

      - name: Download lazymc
        run: |
          mkdir ~/lazymc
          cd ~/lazymc
          git clone --branch v$LAZYMC_VERSION https://github.com/timvisee/lazymc .

      - name: Build 
        run: |
          "$(cat /tmp/lazymc-build-command)" build --target $RUST_ARCH --release --locked
          
  
  build-image:
    name: Build And Push Image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      #- name: docker
      #  uses: ./.github/actions/docker
      #  with:
      #    publish: false
          
  find-tests:
    name: Find Tests
    runs-on: ubuntu-latest

    outputs:
      folders: ${{ steps.jobs.outputs.folders }}
    steps:
      - uses: actions/checkout@v4

      - id: jobs
        uses: kmanimaran/list-folder-action@v4
        with:
          path: ./tests/bats

  test:
    needs: [find-tests]
    strategy:
      matrix:
        inputs: ${{fromJson(needs.find-tests.outputs.folders)}}

    name: Run Bats Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Setup BATS
        uses: mig4/setup-bats@v1
        
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run tests
        run: bats ./tests/bats/${{ matrix.inputs }}
      
